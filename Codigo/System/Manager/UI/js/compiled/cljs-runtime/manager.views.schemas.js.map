{"version":3,"sources":["manager/views/schemas.cljs"],"mappings":";AAWA,AAAAA,+EAAA,wDAAA;AAAA,AAAA,2HAAA,+GAAA,oDAAA,mFAAA,wFAAA,qBAAA,mFAAA,sFAAA,yBAAA,sHAAA,gBAAA,sHAAA,oEAAA,t4BACGC,oHACCC,qiBAGAC,sIACAC,sHAA4CC;;AAEhD,AAAAL,+EAAA,iEAAA;AAAA,AAAA,2HAAA,+GAAA,oDAAA,mFAAA,wFAAA,qBAAA,mFAAA,sFAAA,yBAAA,sHAAA,oBAAA,sHAAA,oEAAA,14BACGC,oHACCC,qiBAGAC,0IACAC,sHAA4CC;;AAEhD,AAAAL,+EAAA,wDAAA;AAAA,AAAA,2HAAA,+GAAA,oDAAA,mFAAA,wFAAA,qBAAA,mFAAA,sFAAA,yBAAA,sHAAA,gBAAA,sHAAA,oEAAA,oDAAA,8HAAA,0DAAA,WAAA,mFAAA,htCACGC,oHACCC,qiBAGAC,sIACAC,sHAA4CC,wHAC5CC,iQAAqDD;;AAEzD,AAAAL,+EAAA,wDAAA;AAAA,AAAA,2HAAA,+GAAA,oDAAA,mFAAA,wFAAA,qBAAA,mFAAA,sFAAA,yBAAA,sHAAA,eAAA,sHAAA,oEAAA,r4BACGC,oHACCC,qiBAGAC,qIACAC,8HAA6CC","names":["manager.views.schemas/schemas-form","manager.components.form/scaffold","manager.components.form/row","manager.components.form/name-input","manager.components.form/text-input","manager.components.form/root","manager.components.form/multi-select-input"],"sourcesContent":["(ns manager.views.schemas\n  (:require [re-frame.core :as rf]\n            [re-com.core :as rc :refer [at]]\n            [manager.components.list :as list]\n            [manager.components.form :as form]\n            [manager.routes :as routes]\n            [manager.utils :as u]))\n\n\n\n\n(defmethod schemas-form :inputs []\n  [form/scaffold\n   [form/row :top\n    [:button.btn.btn-success \"Create New\"]\n    [:button.btn.btn-danger \"Delete\"]]\n   [form/name-input \"Input\"]\n   [form/text-input :description \"Description:\" form/root]])\n\n(defmethod schemas-form :interfaces []\n  [form/scaffold\n   [form/row :top\n    [:button.btn.btn-success \"Create New\"]\n    [:button.btn.btn-danger \"Delete\"]]\n   [form/name-input \"Interface\"]\n   [form/text-input :description \"Description:\" form/root]])\n\n(defmethod schemas-form :unions []\n  [form/scaffold\n   [form/row :top\n    [:button.btn.btn-success \"Create New\"]\n    [:button.btn.btn-danger \"Delete\"]]\n   [form/name-input \"Union\"]\n   [form/text-input :description \"Description:\" form/root]\n   [form/multi-select-input :members \"Members:\" [:types] form/root]])\n\n(defmethod schemas-form :enums []\n  [form/scaffold\n   [form/row :top\n    [:button.btn.btn-success \"Create New\"]\n    [:button.btn.btn-danger \"Delete\"]]\n   [form/name-input \"Enum\"]\n   [form/text-input :description \"Description:\"] form/root])\n\n\n"]}