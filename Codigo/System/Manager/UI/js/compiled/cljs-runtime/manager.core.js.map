{"version":3,"sources":["manager/core.cljs"],"mappings":";AAQA,yDAAA,zDAACA,+HAEA,qBAAA,2CAAA,mEAAA,wCAAA,wEAAA,0EAAA,8DAAA,sEAAA,6DAAA,0EAAA,iFAAA,oDAAA,6DAAA,mFAAA,2DAAA,mEAAA,mFAAA,2DAAA,gFAAA,mFAAA,2DAAA,sEAAA,mFAAA,2DAAA,gEAAA,mFAAA,gEAAA,mFAAA,2DAAA,gEAAA,mFAAA,2DAAA,yEAAA,mFAAA,mEAAA,mFAAA,2DAAA,qEAAA,wDAAA,2CAAA,4DAAA,mFAAA,aAAA,oDAAA,mFAAA,MAAA,UAAA,eAAA,yDAAA,mFAAA,SAAA,MAAA,OAAA,UAAA,aAAA,2DAAA,mFAAA,OAAA,UAAA,iBAAA,0DAAA,mFAAA,MAAA,OAAA,QAAA,MAAA,l7GAACC;AAkBF,AAAKC,4BACMC;AAEX,yBAAA,zBAAMC;AAAN,AACE,GAAMF;AAAN,AACE,gHAAA,zGAACG;;AADH;;;AAGF,0BAAA,1BAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,sCAAuBJ;;AAEzC,oBAAA,pBAAMK;AAAN,AACE,AAACC;;AACD,4BAAA,mFAAA,/GAACC;;AACD,AAACX;;AACD,OAACE","names":["re_frame.core.reg_event_db","cljs.core/constantly","manager.core/debug?","js/goog.DEBUG","manager.core/dev-setup","cljs.core.println","manager.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","manager.views.page/main-panel","manager.core/init","manager.routes/start!","re-frame.core/dispatch-sync"],"sourcesContent":["(ns manager.core\n  (:require [reagent.dom :as rdom]\n            [re-frame.core :as rf]\n            [manager.navigation]\n            [manager.controller]\n            [manager.routes :as routes]\n            [manager.views.page :as views.page]))\n\n(rf/reg-event-db\n :initialize-db\n (constantly\n  {:panel->path\n   {:schemas_types [:graphql :objects]\n    :schemas_inputs [:graphql :input-objects]\n    :schemas_interfaces [:graphql :interfaces]\n    :schemas_unions [:graphql :unions]\n    :schemas_enums [:graphql :enums]\n    :apis  [:sources]\n    :queries [:graphql :queries]\n    :mutations [:graphql :mutations]\n    :settings  [:config]}\n   :names\n   {:default [nil]\n    :env [\"dev\" \"staging\" \"prod\"]\n    :scalar  [\"String\" \"Int\" \"Long\" \"Boolean\" \"ID\"]\n    :request [\"body\" \"headers\" \"params\"]\n    :methods [\"GET\" \"POST\" \"PATCH\" \"PUT\" \"DELETE\"]}}))\n\n(def debug?\n  ^boolean goog.DEBUG)\n\n(defn dev-setup []\n  (when debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (rf/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views.page/main-panel] root-el)))\n\n(defn init []\n  (routes/start!)\n  (rf/dispatch-sync [:initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}