{"version":3,"sources":["manager/controller.cljs"],"mappings":";AAOA,wCAAA,gDAAAA,xFAAMI,iGACUE;AADhB,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEACWI;AADX,AAAA,kDAAA,4JAAA,iEAAA,2CAAA,uDAAA,oDAAA,mDAAA,6BAAA,wDAAA,mCAAA,0FAAA,iOAAA,iEAAA,mFAAA,yGAAA,gEAAA,mFAAA,zrCAEe,kDAAA,lDAACE,+CAAOF,yfAIU,AAACG,2GACD,+BAAA,2CAAA,8DAAA,xIAACC;;AAIlC,mCAAA,2CAAAC,9EAAME,uFACUN;AADhB,AAAA,IAAAK,aAAAD;IAAAC,iBAAA,AAAAT,4BAAAS;SAAA,AAAAR,4CAAAQ,eAAA,hEACWN;AADX,AAAA,kDAAA,4JAAA,iEAAA,2CAAA,uDAAA,oDAAA,mDAAA,8BAAA,uLAAA,0FAAA,iOAAA,iEAAA,mFAAA,gGAAA,gEAAA,mFAAA,7wCAEe,kDAAA,lDAACE,+CAAOF,6ZAGU,AAACQ,gCAAiB,AAAA,0FAAWR,+DAC7B,AAACG,2GACD,+BAAA,2CAAA,8DAAA,xIAACC;;AAIlC,qCAAA,6CAAAK,lFAAMG,2FAC+BX;AADrC,AAAA,IAAAS,aAAAD;IAAAC,iBAAA,AAAAb,4BAAAa;IAAAC,aAAA,AAAAb,4CAAAY,eAAA;IAAAC,iBAAA,AAAAd,4BAAAc;SAAAA,LAC4BX;eAD5B,AAAAF,4CAAAa,eAAA,tEACKE;AADL,AAAA,kDAAA,4JAAA,iEAAA,2CAAA,uDAAA,oDAAA,mDAAA,+BAAA,wDAAA,2CAAA,kJAAA,kKAAA,0FAAA,iOAAA,iEAAA,mFAAA,oGAAA,gEAAA,mFAAA,l/CAEe,kDAAA,lDAACX,+CAAOF,8fAGiB,AAAA,mFAAOa,+DAAgB,AAAA,2FAAWA,4EACzC,AAACV,2GACD,+BAAA,2CAAA,8DAAA,xIAACC;;AAMlC,yDAAA,zDAACU,0IAAoCf;AACrC,yDAAA,zDAACgB,0JAA4CC;AAC7C,yDAAA,zDAACD,0JAA4CE;AAE7C,yDAAA,zDAACH,+HAA+BP;AAChC,yDAAA,zDAACQ,iJAAuCG;AACxC,yDAAA,zDAACH,gJAAuCI;AAExC,yDAAA,zDAACL,mIAAiCF;AAClC,yDAAA,zDAACG,qJAAyCK;AAC1C,yDAAA,zDAACL,oJAAyCM;AAG1C,yDAAA,zDAACN,qIAAiCO;AAElC,yDAAA,zDAACP,gIAA+BQ;AAIhC,yDAAA,zDAACR,8HAA8BS;AAE/B,yDAAA,zDAACT,oIAAiCU;AAElC,yDAAA,zDAACV,gJAAuCW;AAExC,yDAAA,zDAACX,sJAA0CY;AAG3C,yDAAA,zDAACb,qIAAkCc;AAGnC,2DAAA,3DAACC,6LAA8BC;AAE/B,2DAAA,3DAACD,mLAAyBE;AAE1B,2DAAA,3DAACF,6KAAsBG;AAGvB,2DAAA,3DAACH,+KAAuBI;AAExB,yDAAA,zDAAClB,+HAA+BmB;AAGhC,2DAAA,3DAACL,sLAA2BM","names":["p__27025","map__27027","cljs.core/--destructure-map","cljs.core.get","manager.controller/load-all-resources","db","_","cljs.core.dissoc","ajax.core/json-request-format","ajax.core/json-response-format","p__27029","map__27030","manager.controller/save-resource","manager.utils/internal->wire","p__27033","map__27034","map__27035","manager.controller/delete-resource","resource","re_frame.core.reg_event_fx","re_frame.core.reg_event_db","manager.handlers/load-all-resources-success","manager.handlers/load-all-resources-failure","manager.handlers/save-resource-success","manager.handlers/save-resource-failure","manager.handlers/delete-resource-success","manager.handlers/delete-resource-failure","manager.handlers/select-resource","manager.handlers/select-config","manager.handlers/new-resource","manager.handlers/update-resource","manager.handlers/new-resource-property","manager.handlers/delete-resource-property","manager.handlers/reload-resources","re_frame.core.reg_sub","manager.handlers/get-resource-list","manager.handlers/get-resource","manager.handlers/get-names","manager.handlers/get-result","manager.handlers/delete-result","manager.handlers/check-resource"],"sourcesContent":["(ns manager.controller\n  (:require [re-frame.core :as rf] \n            [day8.re-frame.http-fx]\n            [manager.handlers :as h]\n            [manager.utils :as u]\n            [ajax.core :as ajax]))\n\n(defn load-all-resources\n  [{:keys [db]} _]\n  {:db         (dissoc db :result)\n   :http-xhrio {:method          :post\n                :uri             \"http://localhost:8180/read\"\n                :params          {}\n                :format          (ajax/json-request-format)\n                :response-format (ajax/json-response-format {:keywords? true})\n                :on-success      [:load-all-resources-success]\n                :on-failure      [:load-all-resources-failure]}})\n\n(defn save-resource\n  [{:keys [db]} _]\n  {:db         (dissoc db :result)\n   :http-xhrio {:method          :post\n                :uri             \"http://localhost:8180/write\"\n                :params          (u/internal->wire (:resource db))\n                :format          (ajax/json-request-format)\n                :response-format (ajax/json-response-format {:keywords? true})\n                :on-success      [:save-resource-success]\n                :on-failure      [:save-resource-failure]}})\n\n(defn delete-resource\n  [{{resource :resource :as db} :db} _]\n  {:db         (dissoc db :result)\n   :http-xhrio {:method          :post\n                :uri             \"http://localhost:8180/delete\"\n                :params          {:path (:path resource) :name (:old-name resource)}\n                :format          (ajax/json-request-format)\n                :response-format (ajax/json-response-format {:keywords? true})\n                :on-success      [:delete-resource-success]\n                :on-failure      [:delete-resource-failure]}})\n\n\n;; Load all-resources\n(rf/reg-event-fx :load-all-resources load-all-resources)\n(rf/reg-event-db :load-all-resources-success h/load-all-resources-success)\n(rf/reg-event-db :load-all-resources-failure h/load-all-resources-failure)\n;; Create/Update resource\n(rf/reg-event-fx :save-resource save-resource)\n(rf/reg-event-db :save-resource-success h/save-resource-success)\n(rf/reg-event-db :save-resource-failure h/save-resource-failure)\n;; Delete resource\n(rf/reg-event-fx :delete-resource delete-resource)\n(rf/reg-event-db :delete-resource-success h/delete-resource-success)\n(rf/reg-event-db :delete-resource-failure h/delete-resource-failure)\n\n;; Select resource\n(rf/reg-event-db :select-resource h/select-resource)\n;; Select config\n(rf/reg-event-db :select-config h/select-config)\n\n\n;; New resource\n(rf/reg-event-db :new-resource h/new-resource)\n;; Set resource value\n(rf/reg-event-db :update-resource h/update-resource)\n;; New resource property\n(rf/reg-event-db :new-resource-property h/new-resource-property)\n;; Delete resource property\n(rf/reg-event-db :delete-resource-property h/delete-resource-property)\n\n;; Reload\n(rf/reg-event-fx :reload-resources h/reload-resources)\n\n;; Get resource list\n(rf/reg-sub :get-resource-list h/get-resource-list)\n;; Get resource values\n(rf/reg-sub :get-resource h/get-resource)\n;; Get names\n(rf/reg-sub :get-names h/get-names)\n\n;; Get result\n(rf/reg-sub :get-result h/get-result)\n;; Delete result\n(rf/reg-event-db :delete-result h/delete-result)\n\n;; Check resource\n(rf/reg-sub :check-resource h/check-resource)\n"]}