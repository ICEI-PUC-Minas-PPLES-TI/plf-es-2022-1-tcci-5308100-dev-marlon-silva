{"version":3,"sources":["manager/views/schemas/enums.cljs"],"mappings":";AAKA,yCAAA,zCAAMA,0FAAYC;AAAlB,AAAA,2BAAA,mHAAA,sHAAA,kEAAA,sBAAA,sHAAA,oEAAA,4BAAA,kIAAA,iEAAA,cAAA,0EAAA,oBAAA,mFAAA,oFAAA,kHAAA,2CAAA,uDAAA,4DAAA,uDAAA,iBAAA,0IAAA,qBAAA,2CAAA,oDAAA,mFAAA,2CAAA,oDACS,AAACC,eAAKD,jrDACZE,mHACCC,8GAAqCH,gGACrCG,sHAA4CH,gGAC5CI,mMAAoEJ,mRAGlEK,kWAC0B,AAACC,kBAAQN,MAAM,AAACC,eAAKD;;AAErD,AAAAO,4EAAA,wDAAA;AAAA,AACE,gBAAA,mFAAA,qDAAA,pJAAMC;IACAC,SAAO,+CAAA,AAAAC,mPAAA,lSAACC,+DAAQ,sDAAA,mFAAA,zIAACC,yNAA8BJ;AADrD,AAAA,2HAAA,0HAAA,kHAAA,KAAA,sHAAA,eAAA,sHAAA,oEAAA,4DAAA,+GAAA,yDAAA,mFAAA,iDAAA,mFAAA,4EAAA,0BAAA,kHAAA,2CAAA,uDAAA,qDAAA,uDAAA,cAAA,uFAAA,wDAAA,qBAAA,wHAAA,5tDAEGK,oHACCC,0HACAC,uHACCC,qIACAb,sHAA4Cc,gIAC7CC,qeAECb,kfACDc,qFAAsB,AAACC,oDAAY,WAAKC,IAAIC;AAAT,AAAY,OAACvB,uCAAW,AAACwB,6CAAKf,UAAUa;sIAV/E,nIAUsF,gDAAA,hDAACG,kHAAoBf,oGACvGgB","names":["manager.views.schemas.enums/value-form","path","cljs.core/last","manager.components.form/subform","manager.components.form/text-input","manager.components.form/text-input-with-toggle","manager.components.form/button","cljs.core/butlast","manager.views.schemas.core/form","base-path","values","cljs.core/deref","cljs.core.get_in","re_frame.core.subscribe","manager.components.form/scaffold","manager.components.form/header","manager.components.form/inputs","manager.components.form/name-input","manager.components.form/root","manager.components.form/row","manager.components.form/subform-list","cljs.core.map_indexed","idx","_","cljs.core.conj","cljs.core.sort_by","manager.components.form/footer"],"sourcesContent":["(ns manager.views.schemas.enums\n  (:require [re-frame.core :as rf]\n            [manager.components.form :as form]\n            [manager.views.schemas.core :as schemas]))\n\n(defn value-form [path]\n  ^{:key (last path)}\n  [form/subform\n   [form/text-input :enum-value \"Value:\" path]\n   [form/text-input :description \"Description:\" path]\n   [form/text-input-with-toggle :deprecated \"Deprecated:\" :isDeprecated path\n    ^{:key :delete}\n    [:span.input-group-btn\n     [form/button {:style :warning :label \"Delete\"}\n      :delete-resource-property (butlast path) (last path) true]]]])\n\n(defmethod schemas/form :enums []\n  (let [base-path [:data :values]\n        values (get-in @(rf/subscribe [:get-resource]) base-path {})]\n    [form/scaffold\n     [form/header]\n     [form/inputs nil\n      [form/name-input \"Enum\"]\n      [form/text-input :description \"Description:\" form/root]]\n     [form/row :middle\n      [:h4 [:span.page-header \"Values:\"]]\n      [form/button {:style :info :label \"Add\"} :new-resource-property :values true]]\n     [form/subform-list :lg (map-indexed (fn [idx _] (value-form (conj base-path idx))) (sort-by :enum-value values))]\n     [form/footer]]))\n"]}