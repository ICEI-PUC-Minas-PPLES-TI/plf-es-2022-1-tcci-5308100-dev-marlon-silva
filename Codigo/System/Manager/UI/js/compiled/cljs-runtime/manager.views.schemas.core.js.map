{"version":3,"sources":["manager/views/schemas/core.cljs"],"mappings":";AAOA,GAAA,QAAAA,oCAAAC,0CAAAC,kDAAAC,uDAAAC;AAAA;AAAA,AAAA,kCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,7HAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,6BAAA,2BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAeO;;;AAEf,2CAAA,3CAAMC;AAAN,AACE,mBAAA,AAAAC,fAAMC,+BAAc,sDAAA,mFAAA,zIAACC;IACfC,OAAK,AAACC,iBAAO,AAACC,+BAAgBJ;AADpC,AAEE,GAAA,AAAAK,cAAQH;AACN,8BAAA,mFAAA,8DAAA,xKAACI;;AADH,6GAAA,+QAAA,2DAAA,gBAAA,iDAAA,MAAA,2DAAA,yDAAA,6DAAA,mFAAA,gJAAA,vzBAEGC,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,kCAAA,oDAAA,qeAIFC,wCAAqBT,wGACrBJ,gCAAKM;;;AAExB,AAAAQ,kEAAA,0DAAA;AAAA,AAAA,0FAAsCZ","names":["js/manager","js/manager.views","js/manager.views.schemas","js/manager.views.schemas.core","js/manager.views.schemas.core.form","method-table__5642__auto__","cljs.core.atom","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__27024","cljs.core/MultiFn","cljs.core.symbol","manager.views.schemas.core/form","cljs.core/identity","manager.views.schemas.core/schemas-panel","cljs.core/deref","active-panel","re_frame.core.subscribe","kind","cljs.core/second","manager.utils/panel->vector","cljs.core/not","re-frame.core/dispatch","re-com.core/h-box","js/goog.DEBUG","manager.components.list/multi-resources","manager.routes/panels"],"sourcesContent":["(ns manager.views.schemas.core\n  (:require [re-frame.core :as rf]\n            [re-com.core :as rc :refer [at]]\n            [manager.components.list :as list]\n            [manager.routes :as routes]\n            [manager.utils :as u]))\n\n(defmulti form identity)\n\n(defn schemas-panel []\n  (let [active-panel @(rf/subscribe [:get-active-panel])\n        kind (second (u/panel->vector active-panel))]\n    (if-not kind\n      (rf/dispatch [:redirect :schemas_types])\n      [rc/h-box :src (at)\n       :padding \"3vh 5em 0 5em\"\n       :gap \"5em\"\n       :justify :center\n       :children [[list/multi-resources active-panel]\n                  [form kind]]])))\n\n(defmethod routes/panels :schemas [] [schemas-panel])\n"]}